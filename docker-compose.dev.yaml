services:
  nginx:
    image: mirror.gcr.io/library/nginx:alpine
    container_name: nginx_dev
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.dev.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/nginx/ssl  # Mount SSL certificates
    depends_on:
      - api
    networks:
      - app-network-dev
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "https://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: nestjs_api_dev
    expose:
      - "8080:8080"
      - "3080:3080"
    ports:
      - "8080:8080"
      - "3080:3080"
    env_file:
      - .env
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - app-network-dev
    command: yarn dev
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  postgres:
    image: postgres:15-alpine
    container_name: postgres_dev
    expose:
      - "5432"
    env_file:
      - .env
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    networks:
      - app-network-dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: redis_dev
    expose:
      - "6379"
    env_file:
      - .env
    volumes:
      - redis_data_dev:/data
    command: redis-server --appendonly yes
    networks:
      - app-network-dev
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_dev
    env_file:
      - .env
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - app-network-dev

volumes:
  postgres_data_dev:
  redis_data_dev:

networks:
  app-network-dev:
    driver: bridge